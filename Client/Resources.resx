<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddEditSettingDialogLearnMore" xml:space="preserve">
    <value>Learn more about this setting</value>
  </data>
  <data name="AddEditSettingDialogName" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="AddEditSettingDialogSection" xml:space="preserve">
    <value>Section:</value>
  </data>
  <data name="AddEditSettingDialogValue" xml:space="preserve">
    <value>Value:</value>
  </data>
  <data name="AddEditSettingDialogAddSetting" xml:space="preserve">
    <value>Add PHP Setting</value>
  </data>
  <data name="AllPagesGoBackTask" xml:space="preserve">
    <value>Back to main page</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Delete16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\Delete16.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="AddEditSettingDialogEditSetting" xml:space="preserve">
    <value>Edit PHP Setting</value>
  </data>
  <data name="AllSettingsPageEditTask" xml:space="preserve">
    <value>Edit...</value>
  </data>
  <data name="AllSettingsPageGettingSettings" xml:space="preserve">
    <value>Getting settings</value>
  </data>
  <data name="GoBack16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\goBack16.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ErrorNoPHPFilesInDirectory" xml:space="preserve">
    <value>The directory does not contain required PHP files: php-cgi.exe and php.ini.</value>
  </data>
  <data name="PHPExtensionItemConfigureTask" xml:space="preserve">
    <value>Configure extension's settings</value>
  </data>
  <data name="PHPExtensionItemEnableTask" xml:space="preserve">
    <value>Enable or disable an extension</value>
  </data>
  <data name="PHPExtensions32" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\php-extensions32.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="PHPExtensionsItemTitle" xml:space="preserve">
    <value>PHP Extensions</value>
  </data>
  <data name="AllExtensionsPageDescription" xml:space="preserve">
    <value>Enable or disable PHP extensions and configure PHP extensions settings.</value>
  </data>
  <data name="AllExtensionsPageDisabledGroup" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="AllExtensionsPageDisableTask" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="AllExtensionsPageEnabledGroup" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="AllExtensionsPageEnableTask" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="AllExtensionsPageGettingExtensions" xml:space="preserve">
    <value>Getting extensions</value>
  </data>
  <data name="AllExtensionsPageLongDescription" xml:space="preserve">
    <value>PHP extensions provide additional functionality to PHP runtime, such as database connectivity, caching, debugging and others. Use this feature to enable or disable PHP extensions and to configure PHP extensions settings.</value>
  </data>
  <data name="AllExtensionsPageNameField" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="AllExtensionsPageStateField" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="AllExtensionsPageTitle" xml:space="preserve">
    <value>PHP Extensions</value>
  </data>
  <data name="AllPagesOpenPHPIniTask" xml:space="preserve">
    <value>Open php.ini</value>
  </data>
  <data name="PHPInfoPageDescription" xml:space="preserve">
    <value>Get the output of the phpinfo() function</value>
  </data>
  <data name="PHPInfoPageLongDescription" xml:space="preserve">
    <value>Get the output of phpinfo() function that provides the information about current state of PHP. This information can be used to examine all aspects of PHP runtime and for debugging purposes.</value>
  </data>
  <data name="PHPInfoPageTitle" xml:space="preserve">
    <value>phpinfo() output</value>
  </data>
  <data name="PHPInfoRefreshPHPInfo" xml:space="preserve">
    <value>Refresh phpinfo</value>
  </data>
  <data name="PHPIniSettingDeleteConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete this setting?</value>
  </data>
  <data name="PHPLogo16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\php-logo16.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="PHPLogo32" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\php-logo32.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="PHPPageConfigurationFile" xml:space="preserve">
    <value>Configuration file:</value>
  </data>
  <data name="PHPPageDescription" xml:space="preserve">
    <value>PHP runtime configuration and settings</value>
  </data>
  <data name="PHPPageExecutable" xml:space="preserve">
    <value>PHP executable:</value>
  </data>
  <data name="PHPPageExtensionsPath" xml:space="preserve">
    <value>Extensions path:</value>
  </data>
  <data name="PHPPageItemTaskSeparator" xml:space="preserve">
    <value> | </value>
  </data>
  <data name="PHPPageLongDescription" xml:space="preserve">
    <value>Use this feature to check the PHP runtime settings, to configure PHP runtime directives and to enable or disable PHP extensions.</value>
  </data>
  <data name="PHPPageTitle" xml:space="preserve">
    <value>PHP Manager</value>
  </data>
  <data name="PHPPageVersion" xml:space="preserve">
    <value>PHP version:</value>
  </data>
  <data name="PHPSettings32" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\php-settings32.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="PHPSettingsItemAllSettingsTask" xml:space="preserve">
    <value>Manage all settings</value>
  </data>
  <data name="PHPSettingsItemErrorReportingTask" xml:space="preserve">
    <value>Configure error reporting</value>
  </data>
  <data name="PHPSettingsItemTitle" xml:space="preserve">
    <value>PHP Settings</value>
  </data>
  <data name="AllPagesAddTask" xml:space="preserve">
    <value>Add...</value>
  </data>
  <data name="AllSettingsPageDescription" xml:space="preserve">
    <value>Configure all php settings</value>
  </data>
  <data name="AllSettingsPageLongDescription" xml:space="preserve">
    <value>Configure all php settings that are stored in php.ini file. These setting control all aspects of PHP runtime, such error reporting, security, sessions and others.</value>
  </data>
  <data name="AllSettingsPageNameField" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="AllSettingsPageSectionField" xml:space="preserve">
    <value>Section</value>
  </data>
  <data name="AllSettingsPageTitle" xml:space="preserve">
    <value>PHP Settings</value>
  </data>
  <data name="AllSettingsPageValueField" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="PHPSetup32" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\php-setup32.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="PHPSetupItemChangeVersionTask" xml:space="preserve">
    <value>Change PHP version</value>
  </data>
  <data name="PHPSetupItemCheckPHPInfoTask" xml:space="preserve">
    <value>Check phpinfo()</value>
  </data>
  <data name="PHPSetupItemRegisterPHPTask" xml:space="preserve">
    <value>Register new PHP version</value>
  </data>
  <data name="PHPSetupItemTitle" xml:space="preserve">
    <value>PHP Setup</value>
  </data>
  <data name="RegisterPHPDialogSelectPath" xml:space="preserve">
    <value>Provide a path to the php executable file (php-cgi.exe):</value>
  </data>
  <data name="AllSettingsPageRemoveTask" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="SelectSiteAndUrlDialogTitle" xml:space="preserve">
    <value>Choose Site and URL</value>
  </data>
  <data name="RegisterPHPDialogRegisterNew" xml:space="preserve">
    <value>Register new PHP version</value>
  </data>
  <data name="SelectSiteAndUrlDialogSelectAUrl" xml:space="preserve">
    <value>Select a &amp;URL used for the selected site:</value>
  </data>
  <data name="SelectSiteAndUrlDialogSelectASite" xml:space="preserve">
    <value>Select a &amp;site where to check PHP configuration:</value>
  </data>
  <data name="PHPSettingsItemLimitsTask" xml:space="preserve">
    <value>Set runtime limits</value>
  </data>
  <data name="PHPPageErrorLog" xml:space="preserve">
    <value>Error log:</value>
  </data>
  <data name="PHPPageEnabledExtensions" xml:space="preserve">
    <value>There are {0} extensions enabled.</value>
  </data>
  <data name="PHPPageInstalledExtensions" xml:space="preserve">
    <value>There are {0} extensions installed.</value>
  </data>
  <data name="ErrorReportingPageDescription" xml:space="preserve">
    <value>PHP error reporting and logging</value>
  </data>
  <data name="ErrorReportingPageLongDescription" xml:space="preserve">
    <value>Use this feature to configure how PHP reports and logs errors, warnings and information notices.</value>
  </data>
  <data name="ErrorReportingPageTitle" xml:space="preserve">
    <value>PHP Error Reporting</value>
  </data>
  <data name="ErrorReportingPageDevMachine" xml:space="preserve">
    <value>&amp;Development machine</value>
  </data>
  <data name="ErrorReportingPageDevMachineDesc" xml:space="preserve">
    <value>This is a development machine. A verbose error reporting will be used. All errors, warnings and informational notices will be output in a web browser and also will be written into a log file.</value>
  </data>
  <data name="ErrorReportingPageErrorLogFile" xml:space="preserve">
    <value>Error log file:</value>
  </data>
  <data name="ErrorReportingPageProdMachine" xml:space="preserve">
    <value>&amp;Production machine</value>
  </data>
  <data name="ErrorReportingPageProdMachineDesc" xml:space="preserve">
    <value>This is a production server accessible from the internet. Only errors will be written to a log file. No errors, warnings or notices will be output in a web browser.</value>
  </data>
  <data name="ErrorReportingPageSelectServerType" xml:space="preserve">
    <value>Select a server type. This will influence how the errors will be reported and logged.</value>
  </data>
  <data name="ErrorReportingPageServerType" xml:space="preserve">
    <value>Type of server</value>
  </data>
  <data name="ErrorInvalidPHPExecutablePath" xml:space="preserve">
    <value>The provided path should point to either php-cgi.exe or php.exe.</value>
  </data>
  <data name="ErrorNoExtDirectory" xml:space="preserve">
    <value>The directory does not contain ext subdirectory with PHP extensions.</value>
  </data>
  <data name="RegisterPHPDialogOpenFileFilter" xml:space="preserve">
    <value>PHP executable (php-cgi.exe)|php-cgi.exe|All files (*.*)|*.*</value>
  </data>
  <data name="RegisterPHPDialogOpenFileTitle" xml:space="preserve">
    <value>Select PHP executable file</value>
  </data>
  <data name="ChangeVersionDialogSelectVersion" xml:space="preserve">
    <value>Select PHP version:</value>
  </data>
  <data name="ChangeVersionDialogTitle" xml:space="preserve">
    <value>Change PHP version</value>
  </data>
  <data name="RegisterPHPDialogExample" xml:space="preserve">
    <value>Example: C:\PHP\php-cgi.exe</value>
  </data>
  <data name="ErrorLogSaveDialogFilter" xml:space="preserve">
    <value>Log file (*.log)|*.log|All files (*.*)|*.*</value>
  </data>
  <data name="ErrorLogSaveDialogTitle" xml:space="preserve">
    <value>PHP Error Log File</value>
  </data>
  <data name="ErrorReportingErrorLogFile" xml:space="preserve">
    <value>Error log file:</value>
  </data>
  <data name="RuntimeLimitsMaxExecutionTime" xml:space="preserve">
    <value>Maximum Execution Time</value>
  </data>
  <data name="RuntimeLimitsPageDescription" xml:space="preserve">
    <value>Configure PHP runtime limits, including execution timeouts, maximum upload times, etc.</value>
  </data>
  <data name="RuntimeLimitsPageLongDescription" xml:space="preserve">
    <value>Configure PHP runtime limits, such as maximum script execution time, maximum size of uploaded files, request timeouts and others.</value>
  </data>
  <data name="RuntimeLimitsPageTitle" xml:space="preserve">
    <value>PHP Runtime Limits</value>
  </data>
  <data name="RuntimeLimitsDataHandling" xml:space="preserve">
    <value>Data Handling</value>
  </data>
  <data name="RuntimeLimitsMaxExecutionTimeDescription" xml:space="preserve">
    <value>Maximum time in seconds a script is allowed to run before it is terminated by the parser. This helps prevent poorly written scripts from tying up the server.</value>
  </data>
  <data name="RuntimeLimitsMaxFileUploads" xml:space="preserve">
    <value>Maximum Files To Upload</value>
  </data>
  <data name="RuntimeLimitsMaxFileUploadsDescription" xml:space="preserve">
    <value>Maximum number of files that can be uploaded via a single request.</value>
  </data>
  <data name="RuntimeLimitsMaxInputTime" xml:space="preserve">
    <value>Maximum Input Time</value>
  </data>
  <data name="RuntimeLimitsMaxInputTimeDescription" xml:space="preserve">
    <value>Maximum time in seconds a script is allowed to parse input data, like POST, GET and file uploads.</value>
  </data>
  <data name="RuntimeLimitsMemoryLimit" xml:space="preserve">
    <value>Memory Limit</value>
  </data>
  <data name="RuntimeLimitsMemoryLimitDescription" xml:space="preserve">
    <value>Maximum amount of memory in bytes that a script is allowed to allocate. This helps prevent poorly written scripts for eating up all available memory on a server.</value>
  </data>
  <data name="RuntimeLimitsPostMaxSize" xml:space="preserve">
    <value>Maximum POST size</value>
  </data>
  <data name="RuntimeLimitsPostMaxSizeDescription" xml:space="preserve">
    <value>Maximum allowed size of POST data. This setting also affects file upload. To upload large files, this value must be larger than upload_max_filesize.</value>
  </data>
  <data name="RuntimeLimitsResourceLimits" xml:space="preserve">
    <value>Resource Limits</value>
  </data>
  <data name="RuntimeLimitsUploadMaxFilesize" xml:space="preserve">
    <value>Upload Maximum File Size</value>
  </data>
  <data name="RuntimeLimitsUploadMaxFilesizeDescription" xml:space="preserve">
    <value>Maximum allowed size for uploaded files.</value>
  </data>
  <data name="PHPPageExtensionsNotAvailable" xml:space="preserve">
    <value>PHP extensions are not available</value>
  </data>
  <data name="PHPPagePHPNotAvailable" xml:space="preserve">
    <value>Not available</value>
  </data>
  <data name="ErrorPHPIniNotFound" xml:space="preserve">
    <value>The php.ini file cannot be found. Make sure PHP is correctly registered with IIS.</value>
  </data>
  <data name="AllPagesPageIsReadOnly" xml:space="preserve">
    <value>These settings are read-only. They can only be changed by a server administrator.</value>
  </data>
  <data name="ErrorCannotCreatePHPInfo" xml:space="preserve">
    <value>Cannot create a temporary phpinfo file on the server due to insufficient privileges.</value>
  </data>
  <data name="ErrorSomeHandlersLocked" xml:space="preserve">
    <value>The PHP version cannot be changed because some of the IIS handler mappings are locked on a server level.</value>
  </data>
  <data name="PHPExtensionItemReadOnlyEnableTask" xml:space="preserve">
    <value>View enabled and disabled extensions</value>
  </data>
  <data name="PHPSettingsItemReadOnlyAllSettingsTask" xml:space="preserve">
    <value>View all settings</value>
  </data>
  <data name="PHPSettingsItemReadOnlyErrorReportingTask" xml:space="preserve">
    <value>View error reporting</value>
  </data>
  <data name="PHPSettingsItemReadOnlyLimitsTask" xml:space="preserve">
    <value>View runtime limits</value>
  </data>
  <data name="ErrorFileDoesNotExist" xml:space="preserve">
    <value>File {0} does not exist.</value>
  </data>
  <data name="Warning16" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Resources\warning16.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="WarningViewRecommendations" xml:space="preserve">
    <value>View recommendations.</value>
  </data>
  <data name="WarningPHPConfigNotOptimal" xml:space="preserve">
    <value>Not optimal PHP configuration detected on this machine. </value>
  </data>
  <data name="ConfigIssueNone" xml:space="preserve">
    <value>&lt;Not set&gt;</value>
  </data>
  <data name="RecommendConfigDialogCurrentValue" xml:space="preserve">
    <value>Current value</value>
  </data>
  <data name="RecommendConfigDialogRecommendation" xml:space="preserve">
    <value>&amp;Recommendation:</value>
  </data>
  <data name="RecommendConfigDialogDetectedIssues" xml:space="preserve">
    <value>&amp;Detected configuration issues:</value>
  </data>
  <data name="RecommendConfigDialogRecommendedValue" xml:space="preserve">
    <value>Recommended value</value>
  </data>
  <data name="RecommendConfigDialogSettingName" xml:space="preserve">
    <value>Setting name</value>
  </data>
  <data name="RecommendConfigDialogTitle" xml:space="preserve">
    <value>Configuration Recommendations</value>
  </data>
  <data name="ConfigIssueCgiForceRedirectNotCorrect" xml:space="preserve">
    <value>The PHP directive "cgi.force_redirect" is not set to "0".</value>
  </data>
  <data name="ConfigIssueCgiForceRedirectNotSet" xml:space="preserve">
    <value>The PHP directive "cgi.force_redirect" is not set.</value>
  </data>
  <data name="ConfigIssueCgiForceRedirectRecommend" xml:space="preserve">
    <value>It is recommended to turn "cgi.force_redirect" off when PHP is run on IIS.</value>
  </data>
  <data name="ConfigIssueCgiPathInfoNotCorrect" xml:space="preserve">
    <value>The PHP directive "cgi.fix_pathinfo" is not set to "1".</value>
  </data>
  <data name="ConfigIssueCgiPathInfoNotSet" xml:space="preserve">
    <value>The PHP directive "cgi.fix_pathinfo" is not set.</value>
  </data>
  <data name="ConfigIssueCgiPathInfoRecommend" xml:space="preserve">
    <value>This setting provides real PATH_INFO/ PATH_TRANSLATED support for CGI and FastCGI. It is recommended to enable this support by setting it to "1".</value>
  </data>
  <data name="ConfigIssueErrorLogNotCorrect" xml:space="preserve">
    <value>The PHP directive "error_log" is using a non-existent directory.</value>
  </data>
  <data name="ConfigIssueErrorLogNotSet" xml:space="preserve">
    <value>The PHP directive "error_log" is not set.</value>
  </data>
  <data name="ConfigIssueErrorLogRecommend" xml:space="preserve">
    <value>The "error_log" specifies the name of the file where script errors should be logged to. It is recommended to set this to an absolute file path and the file should be writable by the web server.</value>
  </data>
  <data name="ConfigIssueExtensionDirIncorrect" xml:space="preserve">
    <value>The PHP directive "extension_dir" does not contain an absolute file path.</value>
  </data>
  <data name="ConfigIssueExtensionDirNotSet" xml:space="preserve">
    <value>The PHP directive "extension_dir" is not set.</value>
  </data>
  <data name="ConfigIssueExtensionDirRecommend" xml:space="preserve">
    <value>The "extension_dir" is used to specify a directory path in which PHP should look for dynamically loadable extensions. It is recommended to use absolute directory path for this setting.</value>
  </data>
  <data name="ConfigIssueFastCgiImpersonateNotCorrect" xml:space="preserve">
    <value>The PHP directive "fastcgi.impersonate" is not set to "1".</value>
  </data>
  <data name="ConfigIssueFastCgiImpersonateNotSet" xml:space="preserve">
    <value>The PHP directive "fastcgi.impersonate" is not set.</value>
  </data>
  <data name="ConfigIssueFastCgiImpersonateRecommend" xml:space="preserve">
    <value>FastCGI supports the ability to impersonate security tokens of the calling client. This allows IIS to define the security context that the request runs under. It is recommended to enable impersonation by setting this directive to "1".</value>
  </data>
  <data name="ConfigIssueLogErrorsNotCorrect" xml:space="preserve">
    <value>The PHP directive "log_errors" is not set to "On".</value>
  </data>
  <data name="ConfigIssueLogErrorsNotSet" xml:space="preserve">
    <value>The PHP directive "log_errors" is not set.</value>
  </data>
  <data name="ConfigIssueLogErrorsRecommend" xml:space="preserve">
    <value>The "log_errors" controls whether PHP logs errors and warning to a log file. It is recommended to set this to "On".</value>
  </data>
  <data name="ConfigIssueMonitorChangesIncorrect" xml:space="preserve">
    <value>The FastCGI setting monitorChangesTo is pointing to a wrong file.</value>
  </data>
  <data name="ConfigIssueMonitorChangesNotSet" xml:space="preserve">
    <value>The FastCGI setting monitorChangesTo is not set.</value>
  </data>
  <data name="ConfigIssueMonitorChangesRecommend" xml:space="preserve">
    <value>The monitorChangesTo setting is used to configure FastCGI to monitor a file so that when file is changed the FastCGI processes are recycled. It is recommended to set this to point to php.ini file that is loaded by PHP. That way the configuration changes to PHP will take effect immediately after the php.ini is updated.</value>
  </data>
  <data name="ConfigIssuePHPMaxRequestsIncorrect" xml:space="preserve">
    <value>The value for PHP_FCGI_MAX_REQUESTS is smaller than the value for FastCGI instanceMaxRequests setting.</value>
  </data>
  <data name="ConfigIssuePHPMaxRequestsNotSet" xml:space="preserve">
    <value>The environment variable PHP_FCGI_MAX_REQUESTS is not set for PHP processes.</value>
  </data>
  <data name="ConfigIssuePHPMaxRequestsRecommend" xml:space="preserve">
    <value>The PHP_FCGI_MAX_REQUESTS environment variable is used to specify the number of requests that PHP executable will handle before it gets recycled. It is recommended that the value for this variable is greater or equal to the value for FastCgi instanceMaxRequests setting. That way the IIS FastCGI process recycling logic will not conflict with PHP recycling behavior.</value>
  </data>
  <data name="ConfigIssuePHPRCFileNotExists" xml:space="preserve">
    <value>The PHPRC environment variable points to a directory that does not contain php.ini file.</value>
  </data>
  <data name="ConfigIssuePHPRCNotSet" xml:space="preserve">
    <value>The PHPRC environment variable is not set for PHP processes.</value>
  </data>
  <data name="ConfigIssuePHPRCRecommend" xml:space="preserve">
    <value>The PHPRC environment variable is used to specify the directory that contains a PHP configuration file php.ini. PHP will load that configuration file during startup. It is recommended to always set this environment variable per PHP registration, thus avoiding situations when PHP loads wrong configuration file.</value>
  </data>
  <data name="ConfigIssueResourceTypeIncorrect" xml:space="preserve">
    <value>The resourceType attribute of an IIS handler for PHP is not set to "Either".</value>
  </data>
  <data name="ConfigIssueResourceTypeRecommend" xml:space="preserve">
    <value>The IIS handler attribute resourceType is used to specify a condition when handler will be invoked for a web request. When configuring the handler for PHP, it is recommended to set this attribute to "Either" for security reasons. That way the handler will be invoked only if the requested URL maps to a file or a folder on the file system.</value>
  </data>
  <data name="ConfigIssueSessionPathNotCorrect" xml:space="preserve">
    <value>The PHP directive "session.save_path" uses a non-existent directory.</value>
  </data>
  <data name="ConfigIssueSessionPathNotSet" xml:space="preserve">
    <value>The PHP directive "session.save_path" is not set.</value>
  </data>
  <data name="ConfigIssueSessionPathRecommend" xml:space="preserve">
    <value>The "session.save_path" sets the path to the directory where PHP session data will be stored. It is recommended to use an absolute path to the directory that is writable by the web server.</value>
  </data>
  <data name="RecommendConfigDialogIssueDescription" xml:space="preserve">
    <value>&amp;Issue description:</value>
  </data>
  <data name="ConfigIssueDefaultDocumentNotSet" xml:space="preserve">
    <value>index.php is not set as a default document.</value>
  </data>
  <data name="ConfigIssueDefaultDocumentRecommend" xml:space="preserve">
    <value>Majority of PHP applications use index.php as the default file name for web requests. It is recommended to add index.php to the list of default documents in IIS and ensure that it is the first in the list.</value>
  </data>
  <data name="ConfigIssueDefaultDocumentNotFirst" xml:space="preserve">
    <value>index.php is not the first in the list of IIS default documents.</value>
  </data>
  <data name="WarningPHPConfigCgi" xml:space="preserve">
    <value>Not optimal PHP registration (CGI) is found. Register new PHP version to enable PHP via FastCGI.</value>
  </data>
  <data name="WarningPHPConfigIsapi" xml:space="preserve">
    <value>Not optimal PHP registration (ISAPI) is found. Register new PHP version to enable PHP via FastCGI.</value>
  </data>
  <data name="WarningPHPConfigNotRegistered" xml:space="preserve">
    <value>PHP is not enabled. Register new PHP version to enable PHP via FastCGI.</value>
  </data>
  <data name="ErrorFailedToGetConfiguration" xml:space="preserve">
    <value>Information about PHP cannot be obtained due to invalid IIS configuration.</value>
  </data>
  <data name="RecommendConfigDialogDescription" xml:space="preserve">
    <value>These are the IIS and PHP configuration issues detected on this server. Select the issues that you want to get fixed.</value>
  </data>
  <data name="ConfigIssueUploadDirNotCorrect" xml:space="preserve">
    <value>The PHP directive "upload_tmp_dir" points to a directory that does not exist.</value>
  </data>
  <data name="ConfigIssueUploadDirNotSet" xml:space="preserve">
    <value>The PHP directive "upload_tmp_dir" is not set.</value>
  </data>
  <data name="ConfigIssueUploadDirRecommend" xml:space="preserve">
    <value>The "upload_tmp_dir" specifies the temporary directory used for storing files when doing file upload. The directory must be writable by whatever user PHP is running as.</value>
  </data>
  <data name="ConfigIssueDateTimeZoneNotSet" xml:space="preserve">
    <value>The PHP directive date.timezone is not set.</value>
  </data>
  <data name="ConfigIssueDateTimeZoneRecommend" xml:space="preserve">
    <value>It is not safe to rely on the system's timezone settings. It is recommended to explicitly set the timezone information by using date.timezone directive or the date_default_timezone_set() function.</value>
  </data>
  <data name="PHPExtensionItemAddTask" xml:space="preserve">
    <value>Add an extension</value>
  </data>
  <data name="AddExtensionDialogAddExtension" xml:space="preserve">
    <value>Add an extension</value>
  </data>
  <data name="AddExtensionDialogOpenFileFilter" xml:space="preserve">
    <value>PHP extension (php*.dll)|php*.dll|All files (*.*)|*.*</value>
  </data>
  <data name="AddExtensionDialogOpenFileTitle" xml:space="preserve">
    <value>Select extension binary file</value>
  </data>
  <data name="ErrorCannotAddExtension" xml:space="preserve">
    <value>Cannot add PHP extension. The extension file cannot be copied to the PHP extensions directory.</value>
  </data>
  <data name="AddExtensionDialogExample" xml:space="preserve">
    <value>Example: C:\Temp\php_wincache.dll</value>
  </data>
  <data name="AddExtensionDialogProvidePath" xml:space="preserve">
    <value>Provide a path to extension's binary file:</value>
  </data>
  <data name="ErrorExtensionFileAlreadyExists" xml:space="preserve">
    <value>This extension already exists in PHP extentions directory. Use "Enable or disable an extension" task to enable this extension.</value>
  </data>
  <data name="PHPInfoPageLocalHandlersFolder" xml:space="preserve">
    <value>'{0}' has local handler mappings that overwrite the mappings defined on the upper levels. Changes to the PHP setup on upper levels may not take effect on this folder.</value>
  </data>
  <data name="PHPInfoPageLocalHandlersSite" xml:space="preserve">
    <value>'{0}' has local handler mappings that overwrite the mappings defined on the server level. Changes to the PHP setup on the server level may not take effect on this site.</value>
  </data>
  <data name="PHPPageHandlerMapping" xml:space="preserve">
    <value>Handler mapping:</value>
  </data>
  <data name="PHPPageInheritedHandler" xml:space="preserve">
    <value>Inherited</value>
  </data>
  <data name="PHPPageLocalHandler" xml:space="preserve">
    <value>Local</value>
  </data>
  <data name="WarningFastCgiLearnMore" xml:space="preserve">
    <value>Learn more.</value>
  </data>
  <data name="WarningPHPConfigNoFastCgi" xml:space="preserve">
    <value>FastCGI feature must be enabled in order to register PHP. </value>
  </data>
  <data name="ErrorPHPIsNotRegistered" xml:space="preserve">
    <value>Cannot find PHP registration on this IIS server. PHP is either not registered or is registered incorrectly.</value>
  </data>
</root>